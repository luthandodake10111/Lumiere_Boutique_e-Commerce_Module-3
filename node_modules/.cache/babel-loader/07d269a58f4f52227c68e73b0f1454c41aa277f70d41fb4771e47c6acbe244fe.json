{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    token: localStorage.getItem('token') || null,\n    products: [],\n    isLoggedIn: localStorage.getItem(\"authToken\") ? true : false,\n    cart: []\n  },\n  mutations: {\n    setLoggedIn(state, status) {\n      state.isLoggedIn = status;\n    },\n    setUser(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('user');\n      localStorage.removeItem('authToken');\n    },\n    setProducts(state, products) {\n      state.products = products;\n    },\n    setCart(state, cartItems) {\n      state.cart = cartItems;\n    },\n    addCartItem(state, item) {\n      const exists = state.cart.find(cartItem => cartItem.product_id === item.product_id);\n      if (exists) {\n        exists.quantity += item.quantity;\n      } else {\n        state.cart.push(item);\n      }\n    },\n    removeCartItem(state, product_id) {\n      state.cart = state.cart.filter(item => item.product_id !== product_id);\n    },\n    updateQuantity(state, {\n      product_id,\n      quantity\n    }) {\n      const item = state.cart.find(cartItem => cartItem.product_id === product_id);\n      if (item) {\n        item.quantity = quantity;\n      }\n    },\n    clearCart(state) {\n      state.cart = [];\n    }\n  },\n  actions: {\n    async fetchProducts({\n      commit\n    }) {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const data = await response.json();\n        commit('setProducts', data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    async register({\n      commit\n    }, {\n      userData,\n      router\n    }) {\n      try {\n        const response = await fetch('http://localhost:3000/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          commit('setUser', data.user);\n          commit('setToken', data.token);\n          alert('Registration successful');\n          router.push('/login');\n        } else {\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Registration failed');\n      }\n    },\n    async login({\n      commit\n    }, {\n      loginData,\n      router\n    }) {\n      try {\n        const response = await fetch('http://localhost:3000/users/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(loginData)\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          alert(data.message || 'Login failed');\n          return;\n        }\n        commit('setToken', data.token);\n        commit('setUser', data.user);\n        alert('Login successful');\n        router.push('/');\n      } catch (error) {\n        console.error(error);\n        alert('Login failed');\n      }\n    }\n  },\n  getters: {\n    allProducts: state => state.products\n  }\n});","map":{"version":3,"names":["createStore","state","user","JSON","parse","localStorage","getItem","token","products","isLoggedIn","cart","mutations","setLoggedIn","status","setUser","setItem","stringify","setToken","logout","removeItem","setProducts","setCart","cartItems","addCartItem","item","exists","find","cartItem","product_id","quantity","push","removeCartItem","filter","updateQuantity","clearCart","actions","fetchProducts","commit","response","fetch","data","json","error","console","register","userData","router","method","headers","body","ok","alert","message","login","loginData","getters","allProducts"],"sources":["C:/LCA-Code-Work/04 M3 - E-commerce/Cloned github e-commerce/Lumiere_Boutique_e-Commerce_Module-3/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    token: localStorage.getItem('token') || null,\r\n    products:[],\r\n    isLoggedIn: localStorage.getItem(\"authToken\") ? true : false, \r\n    cart: []\r\n  },\r\n  mutations: {\r\n    setLoggedIn(state, status){\r\n      state.isLoggedIn = status\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token;\r\n      localStorage.setItem('token', token);\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('authToken');\r\n    },\r\n    setProducts(state, products) {\r\n      state.products = products;\r\n  },\r\n  setCart(state, cartItems){\r\n    state.cart = cartItems;\r\n  },\r\n  addCartItem(state, item){\r\n    const exists = state.cart.find(cartItem => cartItem.product_id === item.product_id);\r\n    if (exists){\r\n      exists.quantity += item.quantity;\r\n    } else {\r\n      state.cart.push(item);\r\n    }\r\n  },\r\n  removeCartItem(state, product_id){\r\n    state.cart = state.cart.filter(item => item.product_id !== product_id);\r\n  },\r\n  updateQuantity(state, { product_id, quantity }) {\r\n    const item = state.cart.find(cartItem => cartItem.product_id === product_id);\r\n    if (item) {\r\n      item.quantity = quantity;\r\n    }\r\n  },\r\n  clearCart(state){\r\n    state.cart = []\r\n  }\r\n  },\r\n  actions: {\r\n\r\nasync fetchProducts({ commit }) {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/products');\r\n    const data = await response.json();\r\n    commit('setProducts', data);\r\n  } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n  }\r\n},\r\n    async register({ commit }, { userData, router }) {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/users/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(userData)\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          commit('setUser', data.user);\r\n          commit('setToken', data.token);\r\n          alert('Registration successful');\r\n          router.push('/login');\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Registration failed');\r\n      }\r\n    },\r\n\r\n    async login({ commit }, { loginData, router }) {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/users/login', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(loginData)\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          alert(data.message || 'Login failed');\r\n          return;\r\n        }\r\n\r\n        commit('setToken', data.token);\r\n        commit('setUser', data.user);\r\n        alert('Login successful');\r\n        router.push('/');\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Login failed');\r\n      }\r\n    }\r\n  },\r\n  getters:{\r\n    allProducts: (state) => state.products,\r\n  }\r\n}); \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}